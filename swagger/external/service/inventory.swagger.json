{
  "swagger": "2.0",
  "info": {
    "title": "external/service/inventory.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/inventory/devices": {
      "get": {
        "summary": "List devices in inventory with filtering.",
        "operationId": "InventoryService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiListInventoryDevicesResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Maximum number of devices to return.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset for pagination.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "deviceTypes",
            "description": "Filter by device type.\n\n - DEVICE_TYPE_UNKNOWN: Unknown device type.\n - LORAWAN: LoRaWAN device.\n - CELLULAR_MQTT: Cellular MQTT device.\n - CELLULAR_TCP: Cellular TCP device.\n - CELLULAR_UDP: Cellular UDP device.\n - CELLULAR_HTTP: Cellular HTTP device.\n - CELLULAR_COAP: Cellular CoAP device.\n - WIFI_MQTT: WiFi/Ethernet MQTT device.\n - WIFI_TCP: WiFi/Ethernet TCP device.\n - WIFI_UDP: WiFi/Ethernet UDP device.\n - WIFI_HTTP: WiFi/Ethernet HTTP device.\n - WIFI_COAP: WiFi/Ethernet CoAP device.\n - WEBSOCKET: WebSocket device.\n - GATEWAY: Gateway device.\n - LORAWAN_GATEWAY: LoRaWAN Gateway device.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "DEVICE_TYPE_UNKNOWN",
                "LORAWAN",
                "CELLULAR_MQTT",
                "CELLULAR_TCP",
                "CELLULAR_UDP",
                "CELLULAR_HTTP",
                "CELLULAR_COAP",
                "WIFI_MQTT",
                "WIFI_TCP",
                "WIFI_UDP",
                "WIFI_HTTP",
                "WIFI_COAP",
                "WEBSOCKET",
                "GATEWAY",
                "LORAWAN_GATEWAY"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "statuses",
            "description": "Filter by status.\n\n - INVENTORY: Device in inventory, not yet onboarded.\n - ONBOARDED: Device onboarded to platform.\n - PROVISIONED: Device provisioned and active.\n - DECOMMISSIONED: Device decommissioned.\n - FAULTY: Device reported as faulty.\n - LOST: Device lost or stolen.",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "INVENTORY",
                "ONBOARDED",
                "PROVISIONED",
                "DECOMMISSIONED",
                "FAULTY",
                "LOST"
              ]
            },
            "collectionFormat": "multi"
          },
          {
            "name": "manufacturer",
            "description": "Filter by manufacturer.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "description": "Filter by model.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "description": "Search query (name, description, etc.).",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "InventoryService"
        ]
      },
      "post": {
        "summary": "Create a new device in inventory.",
        "operationId": "InventoryService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiCreateInventoryDeviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiCreateInventoryDeviceRequest"
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/api/inventory/devices/bulk-import": {
      "post": {
        "summary": "Bulk import devices to inventory.",
        "operationId": "InventoryService_BulkImport",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiBulkImportResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiBulkImportRequest"
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/api/inventory/devices/search": {
      "post": {
        "summary": "Search for device by various criteria.",
        "operationId": "InventoryService_Search",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiSearchInventoryDeviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiSearchInventoryDeviceRequest"
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/api/inventory/devices/{device.eui}": {
      "put": {
        "summary": "Update device in inventory.",
        "operationId": "InventoryService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "device.eui",
            "description": "EUI (EUI64) - Primary identifier.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateInventoryDeviceRequest"
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/api/inventory/devices/{eui}": {
      "get": {
        "summary": "Get device from inventory by EUI.",
        "operationId": "InventoryService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/apiGetInventoryDeviceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "eui",
            "description": "Device EUI.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InventoryService"
        ]
      },
      "delete": {
        "summary": "Delete device from inventory.",
        "operationId": "InventoryService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "eui",
            "description": "Device EUI.",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    },
    "/api/inventory/devices/{eui}/status": {
      "put": {
        "summary": "Update device status (onboarded/provisioned).",
        "operationId": "InventoryService_UpdateStatus",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "eui",
            "description": "Device EUI.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/apiUpdateDeviceStatusRequest"
            }
          }
        ],
        "tags": [
          "InventoryService"
        ]
      }
    }
  },
  "definitions": {
    "apiBulkImportRequest": {
      "type": "object",
      "properties": {
        "devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiInventoryDevice"
          },
          "description": "Devices to import."
        },
        "skipExisting": {
          "type": "boolean",
          "description": "Skip devices that already exist."
        }
      }
    },
    "apiBulkImportResponse": {
      "type": "object",
      "properties": {
        "importedCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of devices successfully imported."
        },
        "skippedCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of devices skipped."
        },
        "failedCount": {
          "type": "integer",
          "format": "int64",
          "description": "Number of devices failed."
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiImportError"
          },
          "description": "Import errors."
        }
      }
    },
    "apiCellularCoAPConfig": {
      "type": "object",
      "properties": {
        "imei": {
          "type": "string",
          "description": "IMEI number."
        },
        "imsi": {
          "type": "string",
          "description": "IMSI number."
        },
        "serverEndpoint": {
          "type": "string",
          "description": "Server endpoint."
        },
        "serverPort": {
          "type": "integer",
          "format": "int64",
          "description": "Server port."
        },
        "uplinkPath": {
          "type": "string",
          "description": "Uplink URI path."
        },
        "downlinkPath": {
          "type": "string",
          "description": "Downlink URI path."
        },
        "downlinkMode": {
          "$ref": "#/definitions/apiDownlinkMode",
          "description": "Downlink delivery mode."
        },
        "dtls": {
          "$ref": "#/definitions/apiDTLSConfig",
          "description": "DTLS configuration."
        },
        "networkType": {
          "$ref": "#/definitions/apiCellularNetworkType",
          "description": "Network type preference."
        }
      },
      "description": "Cellular CoAP device configuration."
    },
    "apiCellularHTTPConfig": {
      "type": "object",
      "properties": {
        "imei": {
          "type": "string",
          "description": "IMEI number."
        },
        "imsi": {
          "type": "string",
          "description": "IMSI number."
        },
        "serverEndpoint": {
          "type": "string",
          "description": "Server endpoint."
        },
        "serverPort": {
          "type": "integer",
          "format": "int64",
          "description": "Server port."
        },
        "uplinkPath": {
          "type": "string",
          "description": "Uplink endpoint path."
        },
        "downlinkPath": {
          "type": "string",
          "description": "Downlink endpoint path."
        },
        "uplinkMethod": {
          "type": "string",
          "description": "HTTP method for uplink."
        },
        "downlinkMode": {
          "$ref": "#/definitions/apiDownlinkMode",
          "description": "Downlink delivery mode."
        },
        "authentication": {
          "$ref": "#/definitions/apiHTTPAuth",
          "description": "Authentication credentials."
        },
        "tls": {
          "$ref": "#/definitions/apiTLSConfig",
          "description": "TLS/SSL configuration."
        },
        "networkType": {
          "$ref": "#/definitions/apiCellularNetworkType",
          "description": "Network type preference."
        }
      },
      "description": "Cellular HTTP device configuration."
    },
    "apiCellularMQTTConfig": {
      "type": "object",
      "properties": {
        "imei": {
          "type": "string",
          "description": "IMEI number."
        },
        "imsi": {
          "type": "string",
          "description": "IMSI number."
        },
        "brokerEndpoint": {
          "type": "string",
          "description": "MQTT broker endpoint."
        },
        "brokerPort": {
          "type": "integer",
          "format": "int64",
          "description": "MQTT broker port."
        },
        "uplinkTopic": {
          "type": "string",
          "description": "Uplink topic."
        },
        "downlinkTopic": {
          "type": "string",
          "description": "Downlink topic."
        },
        "downlinkMode": {
          "$ref": "#/definitions/apiDownlinkMode",
          "description": "Downlink delivery mode."
        },
        "uplinkQos": {
          "type": "integer",
          "format": "int64",
          "description": "QoS level for uplink."
        },
        "downlinkQos": {
          "type": "integer",
          "format": "int64",
          "description": "QoS level for downlink."
        },
        "keepAlive": {
          "type": "integer",
          "format": "int64",
          "description": "Keep alive interval (seconds)."
        },
        "authentication": {
          "$ref": "#/definitions/apiMQTTAuth",
          "description": "Authentication credentials."
        },
        "tls": {
          "$ref": "#/definitions/apiTLSConfig",
          "description": "TLS/SSL configuration."
        },
        "networkType": {
          "$ref": "#/definitions/apiCellularNetworkType",
          "description": "Network type preference."
        }
      },
      "description": "Cellular MQTT device configuration."
    },
    "apiCellularNetworkType": {
      "type": "string",
      "enum": [
        "CELLULAR_AUTO",
        "GSM_2G",
        "UMTS_3G",
        "LTE_4G",
        "NR_5G",
        "NB_IOT",
        "LTE_M"
      ],
      "default": "CELLULAR_AUTO"
    },
    "apiCellularTCPConfig": {
      "type": "object",
      "properties": {
        "imei": {
          "type": "string",
          "description": "IMEI number."
        },
        "imsi": {
          "type": "string",
          "description": "IMSI number."
        },
        "serverEndpoint": {
          "type": "string",
          "description": "Server endpoint."
        },
        "serverPort": {
          "type": "integer",
          "format": "int64",
          "description": "Server port."
        },
        "downlinkMode": {
          "$ref": "#/definitions/apiDownlinkMode",
          "description": "Downlink delivery mode."
        },
        "keepAlive": {
          "type": "integer",
          "format": "int64",
          "description": "Keep alive interval (seconds)."
        },
        "connectionTimeout": {
          "type": "integer",
          "format": "int64",
          "description": "Connection timeout (seconds)."
        },
        "tls": {
          "$ref": "#/definitions/apiTLSConfig",
          "description": "TLS/SSL configuration."
        },
        "networkType": {
          "$ref": "#/definitions/apiCellularNetworkType",
          "description": "Network type preference."
        }
      },
      "description": "Cellular TCP device configuration."
    },
    "apiCellularUDPConfig": {
      "type": "object",
      "properties": {
        "imei": {
          "type": "string",
          "description": "IMEI number."
        },
        "imsi": {
          "type": "string",
          "description": "IMSI number."
        },
        "serverEndpoint": {
          "type": "string",
          "description": "Server endpoint."
        },
        "serverPort": {
          "type": "integer",
          "format": "int64",
          "description": "Server port."
        },
        "downlinkMode": {
          "$ref": "#/definitions/apiDownlinkMode",
          "description": "Downlink delivery mode."
        },
        "networkType": {
          "$ref": "#/definitions/apiCellularNetworkType",
          "description": "Network type preference."
        }
      },
      "description": "Cellular UDP device configuration."
    },
    "apiCodecRuntime": {
      "type": "string",
      "enum": [
        "NONE",
        "CAYENNE_LPP",
        "JS"
      ],
      "default": "NONE",
      "description": "Payload codec runtime."
    },
    "apiCreateInventoryDeviceRequest": {
      "type": "object",
      "properties": {
        "device": {
          "$ref": "#/definitions/apiInventoryDevice",
          "description": "Device to create."
        }
      },
      "description": "Request/Response messages."
    },
    "apiCreateInventoryDeviceResponse": {
      "type": "object",
      "properties": {
        "eui": {
          "type": "string",
          "description": "Device EUI."
        }
      }
    },
    "apiDTLSConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable DTLS."
        },
        "psk": {
          "type": "string",
          "description": "Pre-shared key."
        },
        "pskIdentity": {
          "type": "string",
          "description": "PSK identity."
        },
        "caCert": {
          "type": "string",
          "description": "CA certificate."
        },
        "clientCert": {
          "type": "string",
          "description": "Client certificate."
        },
        "clientKey": {
          "type": "string",
          "description": "Client private key."
        }
      }
    },
    "apiDeviceActivation": {
      "type": "object",
      "properties": {
        "devEui": {
          "type": "string",
          "description": "Device EUI (EUI64)."
        },
        "devAddr": {
          "type": "string",
          "description": "Device address (HEX encoded)."
        },
        "appSKey": {
          "type": "string",
          "description": "Application session key (HEX encoded)."
        },
        "nwkSEncKey": {
          "type": "string",
          "title": "Network session encryption key (HEX encoded).\nNote: For ABP in LoRaWAN 1.0.x, use this, the serving and the forwarding\nnetwork session integrity key fields with the LoRaWAN 1.0.x 'NwkSKey'!"
        },
        "sNwkSIntKey": {
          "type": "string",
          "description": "Serving network session integrity key (HEX encoded)."
        },
        "fNwkSIntKey": {
          "type": "string",
          "description": "Forwarding network session integrity key (HEX encoded)."
        },
        "fCntUp": {
          "type": "integer",
          "format": "int64",
          "description": "Uplink frame-counter."
        },
        "nFCntDown": {
          "type": "integer",
          "format": "int64",
          "description": "Downlink network frame-counter."
        },
        "aFCntDown": {
          "type": "integer",
          "format": "int64",
          "description": "Downlink application frame-counter."
        }
      },
      "title": "Device activation object for ABP"
    },
    "apiDeviceClass": {
      "type": "string",
      "enum": [
        "CLASS_A",
        "CLASS_B",
        "CLASS_C"
      ],
      "default": "CLASS_A",
      "description": "LoRaWAN device class."
    },
    "apiDeviceConfiguration": {
      "type": "object",
      "properties": {
        "lorawanDevice": {
          "$ref": "#/definitions/apiLoRaWANDevice",
          "title": "LoRaWAN device configuration"
        },
        "cellularMqtt": {
          "$ref": "#/definitions/apiCellularMQTTConfig",
          "description": "Cellular MQTT specific configuration."
        },
        "cellularTcp": {
          "$ref": "#/definitions/apiCellularTCPConfig",
          "description": "Cellular TCP specific configuration."
        },
        "cellularUdp": {
          "$ref": "#/definitions/apiCellularUDPConfig",
          "description": "Cellular UDP specific configuration."
        },
        "cellularHttp": {
          "$ref": "#/definitions/apiCellularHTTPConfig",
          "description": "Cellular HTTP specific configuration."
        },
        "cellularCoap": {
          "$ref": "#/definitions/apiCellularCoAPConfig",
          "description": "Cellular CoAP specific configuration."
        },
        "wifiMqtt": {
          "$ref": "#/definitions/apiWiFiMQTTConfig",
          "description": "WiFi/Ethernet MQTT specific configuration."
        },
        "wifiTcp": {
          "$ref": "#/definitions/apiWiFiTCPConfig",
          "description": "WiFi/Ethernet TCP specific configuration."
        },
        "wifiUdp": {
          "$ref": "#/definitions/apiWiFiUDPConfig",
          "description": "WiFi/Ethernet UDP specific configuration."
        },
        "wifiHttp": {
          "$ref": "#/definitions/apiWiFiHTTPConfig",
          "description": "WiFi/Ethernet HTTP specific configuration."
        },
        "wifiCoap": {
          "$ref": "#/definitions/apiWiFiCoAPConfig",
          "description": "WiFi/Ethernet CoAP specific configuration."
        },
        "websocket": {
          "$ref": "#/definitions/apiWebSocketConfig",
          "description": "WebSocket specific configuration."
        },
        "gateway": {
          "$ref": "#/definitions/apiGatewayConfig",
          "description": "Gateway specific configuration."
        },
        "lorawanGateway": {
          "$ref": "#/definitions/apiLoRaWANGateway",
          "description": "LoRaWAN Gateway specific configuration."
        }
      },
      "description": "Device-type specific configuration."
    },
    "apiDeviceKeys": {
      "type": "object",
      "properties": {
        "devEui": {
          "type": "string",
          "description": "DevEUI (EUI64)."
        },
        "nwkKey": {
          "type": "string",
          "title": "Network root key (128 bit).\nNote: For LoRaWAN 1.0.x, use this field for the LoRaWAN 1.0.x 'AppKey'!"
        },
        "appKey": {
          "type": "string",
          "title": "Application root key (128 bit).\nNote: This field only needs to be set for LoRaWAN 1.1.x devices!"
        }
      },
      "title": "Device Keys for OTAA"
    },
    "apiDeviceType": {
      "type": "string",
      "enum": [
        "DEVICE_TYPE_UNKNOWN",
        "LORAWAN",
        "CELLULAR_MQTT",
        "CELLULAR_TCP",
        "CELLULAR_UDP",
        "CELLULAR_HTTP",
        "CELLULAR_COAP",
        "WIFI_MQTT",
        "WIFI_TCP",
        "WIFI_UDP",
        "WIFI_HTTP",
        "WIFI_COAP",
        "WEBSOCKET",
        "GATEWAY",
        "LORAWAN_GATEWAY"
      ],
      "default": "DEVICE_TYPE_UNKNOWN",
      "description": "Device type enumeration.\n\n - DEVICE_TYPE_UNKNOWN: Unknown device type.\n - LORAWAN: LoRaWAN device.\n - CELLULAR_MQTT: Cellular MQTT device.\n - CELLULAR_TCP: Cellular TCP device.\n - CELLULAR_UDP: Cellular UDP device.\n - CELLULAR_HTTP: Cellular HTTP device.\n - CELLULAR_COAP: Cellular CoAP device.\n - WIFI_MQTT: WiFi/Ethernet MQTT device.\n - WIFI_TCP: WiFi/Ethernet TCP device.\n - WIFI_UDP: WiFi/Ethernet UDP device.\n - WIFI_HTTP: WiFi/Ethernet HTTP device.\n - WIFI_COAP: WiFi/Ethernet CoAP device.\n - WEBSOCKET: WebSocket device.\n - GATEWAY: Gateway device.\n - LORAWAN_GATEWAY: LoRaWAN Gateway device."
    },
    "apiDownlinkMode": {
      "type": "string",
      "enum": [
        "IMMEDIATE",
        "QUEUED",
        "SCHEDULED"
      ],
      "default": "IMMEDIATE",
      "description": "Supporting enums for non-LoRaWAN devices (LoRaWAN enums are imported from console-lorawan-api).\n\n - IMMEDIATE: Immediate downlink (for always-on devices).\n - QUEUED: Queued downlink (for battery-powered devices, sent on next uplink).\n - SCHEDULED: Scheduled downlink (sent at specific time)."
    },
    "apiGatewayConfig": {
      "type": "object",
      "properties": {
        "gatewayEui": {
          "type": "string",
          "description": "Gateway EUI."
        },
        "gatewayType": {
          "type": "string",
          "description": "Gateway type (Cellular, WiFi, etc. - not LoRaWAN)."
        },
        "supportedDeviceTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiDeviceType"
          },
          "description": "Supported device types."
        },
        "networkConfig": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Network configuration."
        }
      },
      "description": "Generic gateway configuration (for non-LoRaWAN gateways)."
    },
    "apiGetInventoryDeviceResponse": {
      "type": "object",
      "properties": {
        "device": {
          "$ref": "#/definitions/apiInventoryDevice",
          "description": "Device information."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "apiHTTPAuth": {
      "type": "object",
      "properties": {
        "authType": {
          "type": "string",
          "description": "HTTP authentication type."
        },
        "username": {
          "type": "string",
          "description": "Username (for basic auth)."
        },
        "password": {
          "type": "string",
          "description": "Password (for basic auth)."
        },
        "token": {
          "type": "string",
          "description": "Token (for bearer auth)."
        },
        "apiKey": {
          "type": "string",
          "description": "API key."
        },
        "apiKeyHeader": {
          "type": "string",
          "description": "API key header name."
        }
      }
    },
    "apiImportError": {
      "type": "object",
      "properties": {
        "eui": {
          "type": "string",
          "description": "Device EUI that failed."
        },
        "error": {
          "type": "string",
          "description": "Error message."
        }
      }
    },
    "apiInventoryDevice": {
      "type": "object",
      "properties": {
        "eui": {
          "type": "string",
          "description": "EUI (EUI64) - Primary identifier."
        },
        "name": {
          "type": "string",
          "description": "Device name/model."
        },
        "description": {
          "type": "string",
          "description": "Device description."
        },
        "deviceType": {
          "$ref": "#/definitions/apiDeviceType",
          "description": "Device type (determines which configuration is used)."
        },
        "status": {
          "$ref": "#/definitions/apiInventoryStatus",
          "description": "Current inventory status."
        },
        "manufacturer": {
          "type": "string",
          "description": "Manufacturer information."
        },
        "model": {
          "type": "string",
          "description": "Model number/SKU."
        },
        "hardwareVersion": {
          "type": "string",
          "description": "Hardware version."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "Firmware version."
        },
        "serialNumber": {
          "type": "string",
          "description": "Serial number."
        },
        "configuration": {
          "$ref": "#/definitions/apiDeviceConfiguration",
          "description": "Device type specific configuration."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Device tags/labels."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Additional metadata."
        },
        "batchId": {
          "type": "string",
          "description": "Batch/lot information."
        },
        "procurement": {
          "$ref": "#/definitions/apiProcurementInfo",
          "description": "Procurement information."
        }
      },
      "description": "InventoryDevice represents a device in the inventory with all necessary configuration."
    },
    "apiInventoryDeviceListItem": {
      "type": "object",
      "properties": {
        "eui": {
          "type": "string",
          "description": "Device EUI."
        },
        "name": {
          "type": "string",
          "description": "Device name."
        },
        "deviceType": {
          "$ref": "#/definitions/apiDeviceType",
          "description": "Device type."
        },
        "status": {
          "$ref": "#/definitions/apiInventoryStatus",
          "description": "Current status."
        },
        "manufacturer": {
          "type": "string",
          "description": "Manufacturer."
        },
        "model": {
          "type": "string",
          "description": "Model."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "apiInventoryStatus": {
      "type": "string",
      "enum": [
        "INVENTORY",
        "ONBOARDED",
        "PROVISIONED",
        "DECOMMISSIONED",
        "FAULTY",
        "LOST"
      ],
      "default": "INVENTORY",
      "description": "Inventory status enumeration.\n\n - INVENTORY: Device in inventory, not yet onboarded.\n - ONBOARDED: Device onboarded to platform.\n - PROVISIONED: Device provisioned and active.\n - DECOMMISSIONED: Device decommissioned.\n - FAULTY: Device reported as faulty.\n - LOST: Device lost or stolen."
    },
    "apiJoinMode": {
      "type": "string",
      "enum": [
        "OTAA",
        "ABP"
      ],
      "default": "OTAA",
      "description": "LoRaWAN device join mode.\n\n - OTAA: Over-the-air activation.\n - ABP: Activation by personalization."
    },
    "apiListInventoryDevicesResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total count."
        },
        "devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiInventoryDeviceListItem"
          },
          "description": "Device list."
        }
      }
    },
    "apiLoRaWANDevice": {
      "type": "object",
      "properties": {
        "devEui": {
          "type": "string",
          "description": "Device EUI (unique identifier)."
        },
        "name": {
          "type": "string",
          "description": "Device name."
        },
        "description": {
          "type": "string",
          "description": "Device description."
        },
        "applicationId": {
          "type": "string",
          "description": "Application identifier."
        },
        "devAddr": {
          "type": "string",
          "description": "DevAddr (device address). \nOnly used with ABP (activation-by-personalization)."
        },
        "joinMode": {
          "$ref": "#/definitions/apiJoinMode",
          "description": "Device join mode."
        },
        "deviceClass": {
          "$ref": "#/definitions/apiDeviceClass",
          "description": "Device class."
        },
        "region": {
          "$ref": "#/definitions/apiRegion",
          "description": "Regional parameters region."
        },
        "macVersion": {
          "$ref": "#/definitions/apiMacVersion",
          "description": "MAC version."
        },
        "regParamsRevision": {
          "$ref": "#/definitions/apiRegParamsRevision",
          "description": "Regional parameters revision."
        },
        "adrEnabled": {
          "type": "boolean",
          "description": "ADR (adaptive data rate) enabled."
        },
        "expectedUplinkIntervalSec": {
          "type": "integer",
          "format": "int64",
          "description": "Expected uplink interval in seconds."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Device tags."
        },
        "variables": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Device variables."
        },
        "skipFcntCheck": {
          "type": "boolean",
          "description": "Skip frame-counter validation."
        },
        "isDisabled": {
          "type": "boolean",
          "description": "Device is disabled."
        },
        "joinEui": {
          "type": "string",
          "description": "JoinEUI (optional, EUI64).\nThis field will be automatically set / updated on OTAA. However, in some\ncases it must be pre-configured. For example to allow OTAA using a Relay."
        },
        "keys": {
          "$ref": "#/definitions/apiDeviceKeys",
          "title": "Device Keys for OTAA"
        },
        "deviceActivation": {
          "$ref": "#/definitions/apiDeviceActivation",
          "description": "Device activation object."
        },
        "adrAlgorithmId": {
          "type": "string",
          "description": "ADR algorithm ID."
        },
        "payloadCodecRuntime": {
          "$ref": "#/definitions/apiCodecRuntime",
          "description": "Payload codec runtime."
        },
        "payloadCodecScript": {
          "type": "string",
          "description": "Payload codec script."
        },
        "classBTimeout": {
          "type": "integer",
          "format": "int64",
          "description": "Class-B timeout (seconds)."
        },
        "classBPingSlotNbK": {
          "type": "integer",
          "format": "int64",
          "description": "Class-B ping-slots per beacon period."
        },
        "classBPingSlotDr": {
          "type": "integer",
          "format": "int64",
          "description": "Class-B ping-slot DR."
        },
        "classBPingSlotFreq": {
          "type": "integer",
          "format": "int64",
          "description": "Class-B ping-slot freq (Hz)."
        },
        "classCTimeout": {
          "type": "integer",
          "format": "int64",
          "description": "Class-C timeout (seconds)."
        },
        "abpRx1Delay": {
          "type": "integer",
          "format": "int64",
          "description": "RX1 delay (for ABP)."
        },
        "abpRx1DrOffset": {
          "type": "integer",
          "format": "int64",
          "description": "RX1 DR offset (for ABP)."
        },
        "abpRx2Dr": {
          "type": "integer",
          "format": "int64",
          "description": "RX2 DR (for ABP)."
        },
        "abpRx2Freq": {
          "type": "integer",
          "format": "int64",
          "description": "RX2 frequency (for ABP, Hz)."
        },
        "flushQueueOnActivate": {
          "type": "boolean",
          "description": "Flush queue on device activation."
        },
        "deviceStatusReqInterval": {
          "type": "integer",
          "format": "int64",
          "description": "Device-status request interval (times / day)."
        }
      },
      "title": "Simplified LoRaWAN Device definition for inventory integration\nThis defines the minimal required fields for device configuration\nFull LoRaWAN device management is handled by the console-lorawan-api service"
    },
    "apiLoRaWANGateway": {
      "type": "object",
      "properties": {
        "gatewayId": {
          "type": "string",
          "description": "Gateway ID (EUI64)."
        },
        "name": {
          "type": "string",
          "description": "Name."
        },
        "description": {
          "type": "string",
          "description": "Description."
        },
        "location": {
          "$ref": "#/definitions/apiLocation",
          "description": "Gateway location."
        },
        "tags": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Metadata (provided by the gateway)."
        },
        "statsInterval": {
          "type": "integer",
          "format": "int64",
          "description": "Stats interval (seconds).\nThis defines the expected interval in which the gateway sends its\nstatistics."
        },
        "region": {
          "$ref": "#/definitions/apiRegion",
          "description": "Gateway region."
        },
        "model": {
          "type": "string",
          "description": "Gateway model."
        },
        "firmwareVersion": {
          "type": "string",
          "description": "Firmware version."
        },
        "hardwareVersion": {
          "type": "string",
          "description": "Hardware version."
        },
        "networkConfig": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Network configuration."
        }
      },
      "title": "LoRaWAN Gateway definition for inventory integration"
    },
    "apiLocation": {
      "type": "object",
      "properties": {
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude."
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude."
        },
        "altitude": {
          "type": "number",
          "format": "double",
          "description": "Altitude."
        },
        "source": {
          "$ref": "#/definitions/apiLocationSource",
          "description": "Location source."
        },
        "accuracy": {
          "type": "number",
          "format": "float",
          "description": "Accuracy (meters)."
        }
      },
      "title": "Location information (simplified from util.Location)"
    },
    "apiLocationSource": {
      "type": "string",
      "enum": [
        "UNKNOWN",
        "GPS",
        "CONFIG",
        "GEO_RESOLVER_TDOA",
        "GEO_RESOLVER_RSSI",
        "GEO_RESOLVER_GNSS",
        "GEO_RESOLVER_WIFI"
      ],
      "default": "UNKNOWN",
      "description": "Location source enumeration."
    },
    "apiMQTTAuth": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "description": "Username."
        },
        "password": {
          "type": "string",
          "description": "Password."
        },
        "clientCert": {
          "type": "string",
          "description": "Client certificate (for mutual TLS)."
        },
        "clientKey": {
          "type": "string",
          "description": "Client private key."
        }
      },
      "description": "Authentication configurations."
    },
    "apiMacVersion": {
      "type": "string",
      "enum": [
        "LORAWAN_1_0_0",
        "LORAWAN_1_0_1",
        "LORAWAN_1_0_2",
        "LORAWAN_1_0_3",
        "LORAWAN_1_0_4",
        "LORAWAN_1_1_0"
      ],
      "default": "LORAWAN_1_0_0",
      "description": "LoRaWAN MAC version."
    },
    "apiProcurementInfo": {
      "type": "object",
      "properties": {
        "supplier": {
          "type": "string",
          "description": "Supplier/vendor."
        },
        "purchaseOrder": {
          "type": "string",
          "description": "Purchase order number."
        },
        "purchaseDate": {
          "type": "string",
          "format": "date-time",
          "description": "Purchase date."
        },
        "unitCost": {
          "type": "number",
          "format": "double",
          "description": "Unit cost."
        },
        "currency": {
          "type": "string",
          "description": "Currency."
        },
        "warrantyExpiry": {
          "type": "string",
          "format": "date-time",
          "description": "Warranty expiry."
        }
      },
      "description": "Procurement information."
    },
    "apiRegParamsRevision": {
      "type": "string",
      "enum": [
        "A",
        "B",
        "RP002_1_0_0",
        "RP002_1_0_1",
        "RP002_1_0_2",
        "RP002_1_0_3",
        "RP002_1_0_4"
      ],
      "default": "A",
      "description": "LoRaWAN regional parameters revision."
    },
    "apiRegion": {
      "type": "string",
      "enum": [
        "EU868",
        "US915",
        "CN779",
        "EU433",
        "AU915",
        "CN470",
        "AS923",
        "AS923_2",
        "AS923_3",
        "AS923_4",
        "KR920",
        "IN865",
        "RU864",
        "ISM2400"
      ],
      "default": "EU868",
      "description": "LoRaWAN region."
    },
    "apiSearchInventoryDeviceRequest": {
      "type": "object",
      "properties": {
        "criteria": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Search criteria."
        },
        "limit": {
          "type": "integer",
          "format": "int64",
          "description": "Maximum results."
        }
      }
    },
    "apiSearchInventoryDeviceResponse": {
      "type": "object",
      "properties": {
        "devices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/apiInventoryDeviceListItem"
          },
          "description": "Found devices."
        }
      }
    },
    "apiTLSConfig": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "description": "Enable TLS."
        },
        "caCert": {
          "type": "string",
          "description": "CA certificate."
        },
        "clientCert": {
          "type": "string",
          "description": "Client certificate."
        },
        "clientKey": {
          "type": "string",
          "description": "Client private key."
        },
        "skipVerify": {
          "type": "boolean",
          "description": "Skip certificate verification (for testing)."
        }
      },
      "description": "Security configurations."
    },
    "apiUpdateDeviceStatusRequest": {
      "type": "object",
      "properties": {
        "eui": {
          "type": "string",
          "description": "Device EUI."
        },
        "status": {
          "$ref": "#/definitions/apiInventoryStatus",
          "description": "New status."
        },
        "notes": {
          "type": "string",
          "description": "Status update reason/notes."
        }
      }
    },
    "apiUpdateInventoryDeviceRequest": {
      "type": "object",
      "properties": {
        "device": {
          "$ref": "#/definitions/apiInventoryDevice",
          "description": "Device to update."
        }
      }
    },
    "apiWebSocketAuth": {
      "type": "object",
      "properties": {
        "authType": {
          "type": "string",
          "description": "Authentication type."
        },
        "credentials": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Authentication credentials."
        }
      }
    },
    "apiWebSocketConfig": {
      "type": "object",
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "endpoint": {
          "type": "string",
          "description": "WebSocket endpoint."
        },
        "subprotocol": {
          "type": "string",
          "description": "WebSocket subprotocol."
        },
        "authentication": {
          "$ref": "#/definitions/apiWebSocketAuth",
          "description": "Authentication credentials."
        },
        "tls": {
          "$ref": "#/definitions/apiTLSConfig",
          "description": "TLS/SSL configuration."
        }
      },
      "description": "WebSocket device configuration."
    },
    "apiWiFiCoAPConfig": {
      "type": "object",
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "serverEndpoint": {
          "type": "string",
          "description": "Server endpoint."
        },
        "serverPort": {
          "type": "integer",
          "format": "int64",
          "description": "Server port."
        },
        "uplinkPath": {
          "type": "string",
          "description": "Uplink URI path."
        },
        "downlinkPath": {
          "type": "string",
          "description": "Downlink URI path."
        },
        "dtls": {
          "$ref": "#/definitions/apiDTLSConfig",
          "description": "DTLS configuration."
        }
      },
      "description": "WiFi/Ethernet CoAP device configuration."
    },
    "apiWiFiHTTPConfig": {
      "type": "object",
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "serverEndpoint": {
          "type": "string",
          "description": "Server endpoint."
        },
        "serverPort": {
          "type": "integer",
          "format": "int64",
          "description": "Server port."
        },
        "uplinkPath": {
          "type": "string",
          "description": "Uplink endpoint path."
        },
        "downlinkPath": {
          "type": "string",
          "description": "Downlink endpoint path."
        },
        "uplinkMethod": {
          "type": "string",
          "description": "HTTP method for uplink."
        },
        "authentication": {
          "$ref": "#/definitions/apiHTTPAuth",
          "description": "Authentication credentials."
        },
        "tls": {
          "$ref": "#/definitions/apiTLSConfig",
          "description": "TLS/SSL configuration."
        }
      },
      "description": "WiFi/Ethernet HTTP device configuration."
    },
    "apiWiFiMQTTConfig": {
      "type": "object",
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "brokerEndpoint": {
          "type": "string",
          "description": "MQTT broker endpoint."
        },
        "brokerPort": {
          "type": "integer",
          "format": "int64",
          "description": "MQTT broker port."
        },
        "uplinkTopic": {
          "type": "string",
          "description": "Uplink topic."
        },
        "downlinkTopic": {
          "type": "string",
          "description": "Downlink topic."
        },
        "uplinkQos": {
          "type": "integer",
          "format": "int64",
          "description": "QoS level for uplink."
        },
        "downlinkQos": {
          "type": "integer",
          "format": "int64",
          "description": "QoS level for downlink."
        },
        "keepAlive": {
          "type": "integer",
          "format": "int64",
          "description": "Keep alive interval (seconds)."
        },
        "authentication": {
          "$ref": "#/definitions/apiMQTTAuth",
          "description": "Authentication credentials."
        },
        "tls": {
          "$ref": "#/definitions/apiTLSConfig",
          "description": "TLS/SSL configuration."
        }
      },
      "description": "WiFi/Ethernet MQTT device configuration."
    },
    "apiWiFiTCPConfig": {
      "type": "object",
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "serverEndpoint": {
          "type": "string",
          "description": "Server endpoint."
        },
        "serverPort": {
          "type": "integer",
          "format": "int64",
          "description": "Server port."
        },
        "keepAlive": {
          "type": "integer",
          "format": "int64",
          "description": "Keep alive interval (seconds)."
        },
        "connectionTimeout": {
          "type": "integer",
          "format": "int64",
          "description": "Connection timeout (seconds)."
        },
        "tls": {
          "$ref": "#/definitions/apiTLSConfig",
          "description": "TLS/SSL configuration."
        }
      },
      "description": "WiFi/Ethernet TCP device configuration."
    },
    "apiWiFiUDPConfig": {
      "type": "object",
      "properties": {
        "macAddress": {
          "type": "string",
          "description": "MAC address."
        },
        "serverEndpoint": {
          "type": "string",
          "description": "Server endpoint."
        },
        "serverPort": {
          "type": "integer",
          "format": "int64",
          "description": "Server port."
        }
      },
      "description": "WiFi/Ethernet UDP device configuration."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
