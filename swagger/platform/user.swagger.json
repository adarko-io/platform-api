{
  "swagger": "2.0",
  "info": {
    "title": "platform/user.proto",
    "version": "version not set"
  },
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/users": {
      "get": {
        "summary": "Get user list.",
        "operationId": "UserService_List",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/platformListUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "limit",
            "description": "Max number of user to return in the result-set.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "description": "Offset in the result-set (for pagination).",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "summary": "Create a new user.",
        "operationId": "UserService_Create",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/platformCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/platformCreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "summary": "Get data for a particular user.",
        "operationId": "UserService_Get",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/platformGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "User ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      },
      "delete": {
        "summary": "Delete a user.",
        "operationId": "UserService_Delete",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "description": "User ID (UUID).",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/users/{user.id}": {
      "put": {
        "summary": "Update an existing user.",
        "operationId": "UserService_Update",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "user.id",
            "description": "User ID (UUID).\nWill be set automatically on create.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/platformUpdateUserRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/users/{userId}/password": {
      "put": {
        "summary": "UpdatePassword updates a password.",
        "operationId": "UserService_UpdatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "description": "User ID.",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/platformUpdateUserPasswordRequest"
            }
          }
        ],
        "tags": [
          "UserService"
        ]
      }
    }
  },
  "definitions": {
    "platformCreateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/platformUser",
          "description": "User object to create."
        },
        "password": {
          "type": "string",
          "description": "Password of the user."
        },
        "tenants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/platformUserTenant"
          },
          "description": "Add the user to the following Tenants."
        }
      }
    },
    "platformCreateUserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "User ID (UUID)."
        }
      }
    },
    "platformGetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/platformUser",
          "description": "User object."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "platformListUserResponse": {
      "type": "object",
      "properties": {
        "totalCount": {
          "type": "string",
          "format": "int64",
          "description": "Total number of users."
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/platformUserListItem"
          },
          "description": "Result-set."
        }
      }
    },
    "platformUpdateUserPasswordRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "string",
          "description": "User ID."
        },
        "password": {
          "type": "string",
          "description": "New pasword."
        }
      }
    },
    "platformUpdateUserRequest": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/platformUser",
          "description": "User object to update."
        }
      }
    },
    "platformUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "User ID (UUID).\nWill be set automatically on create."
        },
        "sessionTTL": {
          "type": "integer",
          "format": "int32",
          "description": "The session timeout, in minutes."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "Set to true to make the user a global administrator."
        },
        "isEditor": {
          "type": "boolean",
          "description": "Set to true to make the user a global editor."
        },
        "isViewer": {
          "type": "boolean",
          "description": "Set to true to make the user a global viewer."
        },
        "isConsumer": {
          "type": "boolean",
          "description": "Set to true to make the user a consumer."
        },
        "isActive": {
          "type": "boolean",
          "description": "Set to false to disable the user."
        },
        "email": {
          "type": "string",
          "description": "E-mail of the user."
        },
        "note": {
          "type": "string",
          "description": "Optional note to store with the user."
        }
      }
    },
    "platformUserListItem": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "User ID (UUID).\nWill be set automatically on create."
        },
        "email": {
          "type": "string",
          "description": "Email of the user."
        },
        "sessionTTL": {
          "type": "integer",
          "format": "int32",
          "description": "The session timeout, in minutes."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "Set to true to make the user a global administrator."
        },
        "isEditor": {
          "type": "boolean",
          "description": "Set to true to make the user a global editor."
        },
        "isViewer": {
          "type": "boolean",
          "description": "Set to true to make the user a global viewer."
        },
        "isConsumer": {
          "type": "boolean",
          "description": "Set to true to make the user a consumer."
        },
        "isActive": {
          "type": "boolean",
          "description": "Set to false to disable the user."
        },
        "createdAt": {
          "type": "string",
          "format": "date-time",
          "description": "Created at timestamp."
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time",
          "description": "Last update timestamp."
        }
      }
    },
    "platformUserTenant": {
      "type": "object",
      "properties": {
        "tenantId": {
          "type": "string",
          "description": "Tenant ID."
        },
        "isAdmin": {
          "type": "boolean",
          "description": "User is admin within the context of the Tenant."
        },
        "isEditor": {
          "type": "boolean",
          "title": "User is able to modify device related resources"
        },
        "isViewer": {
          "type": "boolean",
          "description": "User is able to modify gateways."
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "typeUrl": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
